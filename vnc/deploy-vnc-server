#! /bin/bash

function usage() {
    echo
    echo "Starts a new vnc server for a specific user"
    echo
    echo -e "\tusage: $(basename "$0") cn "
    echo
    exit 1
}

if [[ -z $1 ]]; then
    usage
fi

export VNC_USERNAME=$1

echo -n "Password for ${VNC_USERNAME}:"
read -sr VNC_PASS
echo

## Using LDAP to validate password and get user id
LDAP_CLUSTER_IP=$(kubectl get svc | grep ldap-svc | awk {'print $3'})
LDAP_UID=$(curl -s "ldap://${LDAP_CLUSTER_IP}:389/cn=${VNC_USERNAME},ou=People,dc=fiuba,dc=com" -u "cn=${VNC_USERNAME},ou=People,dc=fiuba,dc=com":${VNC_PASS} | grep "uid")

if [[ -z "$LDAP_UID" ]]; then
    echo "Error: Invalid credentials"
    exit 1
fi

VNC_USERID=$(echo $LDAP_UID | cut -d " " -f 4)
VNC_USERNAME=$(echo $LDAP_UID | cut -d " " -f 2)

## echo "Welcome ${VNC_USERNAME} (${VNC_USERID})"

export VNC_PW="${VNC_PASS}"

export VNC_HTTP_PORT=$((31001 + VNC_USERID))
export VNC_PORT=$((30001 + VNC_USERID))

## TODO: absolute path for template (maybe embedded here?)
envsubst < template.yaml | kubectl apply -f -

VNC_PODNAME=$(kubectl get pods | grep "vnc-jfresia" | cut -d " " -f 1)
VNC_IP=$(kubectl describe pod $VNC_PODNAME | grep "Node:" | cut -d "/" -f 2)
echo "Connect to ${VNC_IP}:${VNC_HTTP_PORT}"
